---
- name: Download nexus_package 
  get_url: url=http://download.sonatype.com/nexus/oss/{{ nexus_package }} dest={{ nexus_download_dir }}/{{ nexus_package }}
 
- name: Ensure Nexus o/s group exists
  group: name={{ nexus_os_group }} state=present
  when: nexus_create_os_group
 
- name: Ensure Nexus o/s user exists
  user: name={{ nexus_os_user }} group={{ nexus_os_group }} shell={{ nexus_os_user_shell }} state=present
  when: nexus_create_os_user
  
- name: Ensure Nexus installation directory exists
  file: path={{ nexus_installation_dir }} state=directory
 
- name: Unpack Nexus download
  unarchive:
    src={{ nexus_download_dir }}/{{ nexus_package }}
    dest={{ nexus_installation_dir }}
    creates={{ nexus_installation_dir }}/nexus-{{ nexus_version }}
    force=no
    copy=false
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    mode="0755"

- name: Update symlink nexus-latest
  file:
    src: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    dest: "{{ nexus_installation_dir }}/nexus-latest"
    state: link

- name: making working directory
  file:
    path: "{{ nexus_working_dir }}"
    state: directory
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: 0775

- name: Check if sonatype working directory exists
  stat: path={{ nexus_installation_dir }}/sonatype-work
  register: s_w

- name: Move existing sonatype working directory into specified working dir.
  command: mv "{{ nexus_installation_dir }}/sonatype-work" "{{ nexus_working_dir }}/"
  when: s_w.stat.exists
 
- name: Set permissions and ownership on some Nexus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0755"
    recurse: true
  with_items:
    - "{{ nexus_installation_dir }}/{{ nexus_package }}"
    - "{{ nexus_working_dir }}"

- name: Set permissions and ownership on Nexus logs directory
  file:
    path: "{{ item }}"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    state: directory
  with_items:
    - "{{ nexus_installation_dir }}/nexus-latest/logs"
    - "{{ nexus_installation_dir }}/nexus-latest/tmp"
    - "{{ nexus_working_dir }}/nexus"
  
- name: Configure port in nexus.properties
  lineinfile:
    dest={{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties
    line=application-port={{ nexus_port }}
    regexp=application-port=.*
    state=present
  notify:
    - restart nexus

- name: Configure workdir in nexus.properties
  lineinfile:
    dest={{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties
    line=nexus-work={{ nexus_working_dir }}
    regexp=nexus-work=.*
    state=present
  notify:
    - restart nexus

- name: Copy the /etc/init.d/nexus file
  template: src=init-nexus.j2 dest=/etc/init.d/nexus owner=nexus group=nexus mode=0755 backup=yes
  notify:
    - restart nexus

- name: Enabled Nexus service 
  service: name=nexus enabled=true

